(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var clearEditor, deletePrompt, putPrompt, setup;

setup = function() {
  $('#editor').summernote({
    height: 300,
    focus: true
  });
  $('#create').click(function() {
    return putPrompt($('#editor').code());
  });
  $('#clear').click(function() {
    return clearEditor();
  });
  return $('.delete-prompt').click(function() {
    return deletePrompt($(this).attr('data-prompt-id'));
  });
};

clearEditor = function() {
  return $('#editor').code('');
};

deletePrompt = function(id) {
  return $.ajax({
    url: "/prompts/" + id,
    type: 'DELETE'
  }).fail(function() {
    return console.log('Failed to delete!');
  }).done(function(res) {
    return location.reload(true);
  });
};

putPrompt = function(prompt) {
  var req;
  req = {
    url: '/prompts/',
    type: 'PUT',
    data: {
      prompt: prompt
    }
  };
  return $.ajax(req).fail(function() {
    return console.log('Failed to put!');
  }).done(function(res) {
    return location.reload(true);
  });
};

$(setup);


},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlcyI6WyIvVXNlcnMvSnVsaWFuYS9Eb2N1bWVudHMvcmVwb3Mvc3Rvcmllcy5lZHUvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsIi9Vc2Vycy9KdWxpYW5hL0RvY3VtZW50cy9yZXBvcy9zdG9yaWVzLmVkdS9jbGllbnQvanMvcHJvbXB0cy9pbmRleC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNFQSxJQUFBLDJDQUFBOztBQUFBLEtBQUEsR0FBUSxTQUFBLEdBQUE7QUFDSixFQUFBLENBQUEsQ0FBRSxTQUFGLENBQVksQ0FBQyxVQUFiLENBQ0k7QUFBQSxJQUFBLE1BQUEsRUFBUSxHQUFSO0FBQUEsSUFDQSxLQUFBLEVBQU8sSUFEUDtHQURKLENBQUEsQ0FBQTtBQUFBLEVBR0EsQ0FBQSxDQUFFLFNBQUYsQ0FBWSxDQUFDLEtBQWIsQ0FBbUIsU0FBQSxHQUFBO1dBQUcsU0FBQSxDQUFVLENBQUEsQ0FBRSxTQUFGLENBQVksQ0FBQyxJQUFiLENBQUEsQ0FBVixFQUFIO0VBQUEsQ0FBbkIsQ0FIQSxDQUFBO0FBQUEsRUFJQSxDQUFBLENBQUUsUUFBRixDQUFXLENBQUMsS0FBWixDQUFrQixTQUFBLEdBQUE7V0FBRyxXQUFBLENBQUEsRUFBSDtFQUFBLENBQWxCLENBSkEsQ0FBQTtTQUtBLENBQUEsQ0FBRSxnQkFBRixDQUFtQixDQUFDLEtBQXBCLENBQTBCLFNBQUEsR0FBQTtXQUFHLFlBQUEsQ0FBYSxDQUFBLENBQUUsSUFBRixDQUFPLENBQUMsSUFBUixDQUFhLGdCQUFiLENBQWIsRUFBSDtFQUFBLENBQTFCLEVBTkk7QUFBQSxDQUFSLENBQUE7O0FBQUEsV0FRQSxHQUFjLFNBQUEsR0FBQTtTQUFHLENBQUEsQ0FBRSxTQUFGLENBQVksQ0FBQyxJQUFiLENBQWtCLEVBQWxCLEVBQUg7QUFBQSxDQVJkLENBQUE7O0FBQUEsWUFVQSxHQUFlLFNBQUMsRUFBRCxHQUFBO1NBQ1gsQ0FBQyxDQUFDLElBQUYsQ0FBTztBQUFBLElBQUMsR0FBQSxFQUFNLFdBQUEsR0FBVSxFQUFqQjtBQUFBLElBQXdCLElBQUEsRUFBTSxRQUE5QjtHQUFQLENBQ0ksQ0FBQyxJQURMLENBQ1UsU0FBQSxHQUFBO1dBQUcsT0FBTyxDQUFDLEdBQVIsQ0FBWSxtQkFBWixFQUFIO0VBQUEsQ0FEVixDQUVJLENBQUMsSUFGTCxDQUVVLFNBQUMsR0FBRCxHQUFBO1dBQVMsUUFBUSxDQUFDLE1BQVQsQ0FBZ0IsSUFBaEIsRUFBVDtFQUFBLENBRlYsRUFEVztBQUFBLENBVmYsQ0FBQTs7QUFBQSxTQWVBLEdBQVksU0FBQyxNQUFELEdBQUE7QUFDUixNQUFBLEdBQUE7QUFBQSxFQUFBLEdBQUEsR0FDSTtBQUFBLElBQUEsR0FBQSxFQUFLLFdBQUw7QUFBQSxJQUNBLElBQUEsRUFBTSxLQUROO0FBQUEsSUFFQSxJQUFBLEVBQU07QUFBQSxNQUFDLFFBQUEsTUFBRDtLQUZOO0dBREosQ0FBQTtTQUlBLENBQUMsQ0FBQyxJQUFGLENBQU8sR0FBUCxDQUNJLENBQUMsSUFETCxDQUNVLFNBQUEsR0FBQTtXQUFHLE9BQU8sQ0FBQyxHQUFSLENBQVksZ0JBQVosRUFBSDtFQUFBLENBRFYsQ0FFSSxDQUFDLElBRkwsQ0FFVSxTQUFDLEdBQUQsR0FBQTtXQUFTLFFBQVEsQ0FBQyxNQUFULENBQWdCLElBQWhCLEVBQVQ7RUFBQSxDQUZWLEVBTFE7QUFBQSxDQWZaLENBQUE7O0FBQUEsQ0F3QkEsQ0FBRSxLQUFGLENBeEJBLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3Rocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIil9dmFyIGY9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGYuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sZixmLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIlxuXG5zZXR1cCA9IC0+XG4gICAgJCgnI2VkaXRvcicpLnN1bW1lcm5vdGVcbiAgICAgICAgaGVpZ2h0OiAzMDAgICBcbiAgICAgICAgZm9jdXM6IHRydWVcbiAgICAkKCcjY3JlYXRlJykuY2xpY2sgLT4gcHV0UHJvbXB0ICQoJyNlZGl0b3InKS5jb2RlKClcbiAgICAkKCcjY2xlYXInKS5jbGljayAtPiBjbGVhckVkaXRvcigpXG4gICAgJCgnLmRlbGV0ZS1wcm9tcHQnKS5jbGljayAtPiBkZWxldGVQcm9tcHQgJCh0aGlzKS5hdHRyICdkYXRhLXByb21wdC1pZCdcblxuY2xlYXJFZGl0b3IgPSAtPiAkKCcjZWRpdG9yJykuY29kZSAnJ1xuXG5kZWxldGVQcm9tcHQgPSAoaWQpIC0+XG4gICAgJC5hamF4KHt1cmw6IFwiL3Byb21wdHMvI3tpZH1cIiwgdHlwZTogJ0RFTEVURSd9KVxuICAgICAgICAuZmFpbCgtPiBjb25zb2xlLmxvZyAnRmFpbGVkIHRvIGRlbGV0ZSEnKVxuICAgICAgICAuZG9uZSgocmVzKSAtPiBsb2NhdGlvbi5yZWxvYWQgdHJ1ZSlcblxucHV0UHJvbXB0ID0gKHByb21wdCkgLT5cbiAgICByZXEgPSBcbiAgICAgICAgdXJsOiAnL3Byb21wdHMvJ1xuICAgICAgICB0eXBlOiAnUFVUJ1xuICAgICAgICBkYXRhOiB7cHJvbXB0fVxuICAgICQuYWpheChyZXEpXG4gICAgICAgIC5mYWlsKC0+IGNvbnNvbGUubG9nICdGYWlsZWQgdG8gcHV0IScpXG4gICAgICAgIC5kb25lKChyZXMpIC0+IGxvY2F0aW9uLnJlbG9hZCB0cnVlKVxuXG4kIHNldHVwXG4gICAgIl19
