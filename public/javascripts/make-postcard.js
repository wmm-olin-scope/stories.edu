(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var setup;

setup = function() {
  var capitalize, schoolsearch;
  capitalize = function(s) {
    var word;
    return ((function() {
      var _i, _len, _ref, _results;
      _ref = s.split(/\s+/);
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        word = _ref[_i];
        _results.push(word[0].toUpperCase() + word.slice(1).toLowerCase());
      }
      return _results;
    })()).join(' ');
  };
  schoolsearch = new Bloodhound({
    datumTokenizer: function(d) {
      return Bloodhound.tokenizers.whitespace(d.num);
    },
    queryTokenizer: Bloodhound.tokenizers.whitespace,
    remote: {
      url: '/schools/by-name?text=%QUERY',
      filter: function(schools) {
        return $.map(schools, function(school) {
          school.name = capitalize(school.name);
          return school;
        });
      }
    }
  });
  schoolsearch.initialize();
  $('#video-button-desktop').click(function() {
    console.log('click on vid buttn');
    $('#video-modal').modal();
    if (window.VIDRECORDER == null) {
      window.VIDRECORDER = {};
    }
    window.VIDRECORDER.close = function() {
      return $('#video-modal').modal('hide');
    };
    return console.log('attached handler');
  });
  $('#teacher_name').keyup(function() {
    $('#mailto_name').val($(this).val());
  });
  $('#author_name').keyup(function() {
    $('#return_name').val($(this).val());
  });
  $('#mailto_school').focus(function() {
    $('#school_modal').modal('show');
  });
  $('#send_button').click(function() {
    var contents;
    contents = {
      teacherName: $('#teacher_name').text(),
      teacherRole: $('#teacher_role').text(),
      message: $('#freetext').text(),
      authorName: $('#author_name').text(),
      authorRole: $('#author_role').text(),
      anonRequest: $('#checkbox_input').is(':checked'),
      returnName: $('#return_name').text(),
      returnEmail: $('#return_email').text(),
      mailtoName: $('#mailto_name').text(),
      mailtoRole: $('#mailto_role').text(),
      mailtoSchool: $('#mailto_school').text(),
      mailtoStreet: $('#mailto_street').text(),
      mailtoCityState: $('#mailto_city_state').text(),
      youtubeId: $('#youtube_id').val()
    };
    console.log(contents);
    return contents;
  });
  $("#mailto_school").typeahead(null, {
    displayKey: "name",
    source: schoolsearch.ttAdapter(),
    minLength: 4
  });
  $("#mailto_school").bind("typeahead:selected", function(event, data, dataset) {
    $('#mailto_street').val(data.mailingAddress.capitalize());
    $('#mailto_city_state').val(data.city.capitalize() + ", " + data.state + " " + data.zip);
  });
};

$(function() {
  require('../share-buttons').setup();
  require('./video-upload').setup();
  return setup();
});


},{"../share-buttons":3,"./video-upload":2}],2:[function(require,module,exports){
var auth, config, constants, does_meet_requirements, utils, webcam,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

config = {
  OAUTH2_CLIENT_ID: '40051200930.apps.googleusercontent.com',
  DEVELOPER_KEY: '40051200930.apps.googleusercontent.com',
  VIDEO_CATEGORY: 'Education'
};

constants = {
  CATEGORIES_CACHE_EXPIRATION_MINUTES: 3 * 24 * 60,
  CATEGORIES_CACHE_KEY: 'categories',
  DISPLAY_NAME_CACHE_KEY: 'display_name',
  UPLOADS_LIST_ID_CACHE_KEY: 'uploads_list_id',
  PROFILE_PICTURE_CACHE_KEY: 'profile_picture',
  GENERIC_PROFILE_PICTURE_URL: '//s.ytimg.com/yt/img/no_videos_140-vfl1fDI7-.png',
  OAUTH2_TOKEN_TYPE: 'Bearer',
  OAUTH2_SCOPE: 'https://gdata.youtube.com',
  GDATA_SERVER: 'https://gdata.youtube.com',
  CLIENT_LIB_LOAD_CALLBACK: 'onClientLibReady',
  CLIENT_LIB_URL: 'https://apis.google.com/js/client.js?onload=',
  YOUTUBE_API_SERVICE_NAME: 'youtube',
  YOUTUBE_API_VERSION: 'v3',
  PAGE_SIZE: 50,
  MAX_ITEMS_TO_RETRIEVE: 200,
  FEED_CACHE_MINUTES: 5,
  STATE_CACHE_MINUTES: 15,
  MAX_KEYWORD_LENGTH: 30,
  KEYWORD_UPDATE_XML_TEMPLATE: '<?xml version="1.0"?> <entry xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:yt="http://gdata.youtube.com/schemas/2007" xmlns:gd="http://schemas.google.com/g/2005" gd:fields="media:group/media:keywords"> <media:group> <media:keywords>{0}</media:keywords> </media:group> </entry>',
  WIDGET_EMBED_CODE: '<iframe width="420" height="500" src="{0}#playlist={1}"></iframe>',
  PLAYLIST_EMBED_CODE: '<iframe width="640" height="360" src="//www.youtube.com/embed/?listType=playlist&list={0}&showinfo=1" frameborder="0" allowfullscreen></iframe>',
  SUBMISSION_RSS_FEED: 'https://gdata.youtube.com/feeds/api/videos?v=2&alt=rss&orderby=published&category=%7Bhttp%3A%2F%2Fgdata.youtube.com%2Fschemas%2F2007%2Fkeywords.cat%7D{0}',
  DEFAULT_KEYWORD: 'ytdl',
  WEBCAM_VIDEO_TITLE: 'Webcam Submission',
  WEBCAM_VIDEO_DESCRIPTION: 'Uploaded via a webcam.',
  REJECTED_VIDEOS_PLAYLIST: 'Rejected YTDL Submissions',
  NO_THUMBNAIL_URL: '//i.ytimg.com/vi/hqdefault.jpg',
  VIDEO_CONTAINER_TEMPLATE: '<li><div class="video-container {additionalClass}"><input type="button" class="submit-video-button" value="Submit Video"><div><span class="video-title">{title}</span><span class="video-duration">({duration})</span></div><div class="video-uploaded">Uploaded on {uploadedDate}</div><div class="thumbnail-container" data-video-id="{videoId}"><img src="{thumbnailUrl}" class="thumbnail-image"><img src="images/play.png" class="play-overlay"></div></div></li>',
  VIDEO_LI_TEMPLATE: '<li><div class="video-container {0}"><input type="button" class="submit-video-button" data-video-id="{1}" data-existing-keywords="{2}" value="Submit Video"><div><span class="video-title">{3}</span><span class="video-duration">({5})</span></div><div class="video-uploaded">Uploaded on {4}</div><div class="thumbnail-container" data-video-id="{1}"><img src="{6}" class="thumbnail-image"><img src="./images/play.png" class="play-overlay"></div></div></li>',
  ADMIN_VIDEO_LI_TEMPLATE: '<li><div class="video-container">{buttonsHtml}<div><span class="video-title">{title}</span><span class="video-duration">({duration})</span></div><div class="video-uploaded">Uploaded on {uploadedDate} by {uploader}</div><div class="thumbnail-container" data-video-id="{videoId}"><img src="{thumbnailUrl}" class="thumbnail-image"><img src="./images/play.png" class="play-overlay"></div></div></li>',
  PLAYLIST_LI_TEMPLATE: '<li data-playlist-name="{playlistName}" data-state="embed-codes" data-playlist-id="{playlistId}">{playlistName}</li>'
};

webcam = {
  init: function() {
    if ((typeof YT === "undefined" || YT === null) || (YT.UploadWidget == null)) {
      window.onYouTubeIframeAPIReady = function() {
        return webcam.loadUploadWidget();
      };
      return $.getScript('//www.youtube.com/iframe_api');
    } else {
      return webcam.loadUploadWidget();
    }
  },
  loadUploadWidget: function() {
    return new YT.UploadWidget('webcam-widget', {
      webcamOnly: true,
      events: {
        onApiReady: function(event) {
          event.target.setVideoTitle(config.VIDEO_TITLE || constants.WEBCAM_VIDEO_TITLE);
          return event.target.setVideoDescription(config.VIDEO_DESCRIPTION || constants.WEBCAM_VIDEO_DESCRIPTION);
        },
        onUploadSuccess: function(event) {
          console.log("Webcam submission success!");
          console.log(event);
          $('#youtube_id').val(event.data.videoId);
          return window.VIDRECORDER.close();
        },
        onStateChange: function(event) {
          if (event.data.state === YT.UploadWidgetState.ERROR) {
            return console.error("Webcam submission error!");
          }
        }
      }
    });
  }
};

utils = {
  itemsInResponse: function(response) {
    return __indexOf.call(response, 'items') >= 0 && response.items.length > 0;
  }
};

auth = {
  initAuth: function() {
    window[constants.CLIENT_LIB_LOAD_CALLBACK] = function() {
      return gapi.auth.init(function() {
        if (lscache.get(constants.DISPLAY_NAME_CACHE_KEY)) {
          window.setTimeout(function() {
            return gapi.auth.authorize({
              client_id: config.OAUTH2_CLIENT_ID,
              scope: [constants.OAUTH2_SCOPE],
              immediate: true
            }, auth.onAuthResult);
          }, 1);
          return console.log('auth script launched');
        } else {
          return console.log('requesting YT login');
        }
      });
    };
    return $.getScript(constants.CLIENT_LIB_URL + constants.CLIENT_LIB_LOAD_CALLBACK);
  },
  onAuthResult: function(authResult) {
    if (authResult) {
      console.log('Got auth result', authResult);
      return gapi.client.load(constants.YOUTUBE_API_SERVICE_NAME, constants.YOUTUBE_API_VERSION, auth.onYouTubeClientLoad);
    } else {
      console.log('Auth failed');
      return lscache.flush();
    }
  },
  onYouTubeClientLoad: function() {
    var request;
    console.log('Youtube client loaded!');
    if (lscache.get(constants.DISPLAY_NAME_CACHE_KEY)) {

    } else {
      request = gapi.client[constants.YOUTUBE_API_SERVICE_NAME].channels.list({
        mine: true,
        part: 'snippet,contentDetails,status'
      });
      return request.execute(function(response) {
        if (utils.itemsInResponse(response)) {
          if (response.items[0].status.isLinked) {
            lscache.set(constants.UPLOADS_LIST_ID_CACHE_KEY, response.items[0].contentDetails.relatedPlaylists.uploads);
            lscache.set(constants.DISPLAY_NAME_CACHE_KEY, response.items[0].snippet.title);
            return lscache.set(constants.PROFILE_PICTURE_CACHE_KEY, response.items[0].snippet.thumbnails["default"].url);
          } else {
            return console.error('Your account cannot upload videos. Please visit <a target="_blank" href="https://www.youtube.com/signin?next=/create_channel">https://www.youtube.com/signin?next=/create_channel</a> to add a YouTube channel to your account, and try again.');
          }
        } else {
          console.log(response);
          return console.error("Unable to retrieve channel info.");
        }
      });
    }
  }
};

does_meet_requirements = function() {
  if (!$.support.cors) {
    console.error("Browser not supported!");
    return false;
  } else {
    return true;
  }
};

exports.setup = function() {
  if (!config.OAUTH2_CLIENT_ID || !config.DEVELOPER_KEY) {
    return console.log("NOT CONFIGURED!");
  } else {
    console.log("Configured!");
    if (does_meet_requirements) {
      auth.initAuth();
      return webcam.init();
    }
  }
};


},{}],3:[function(require,module,exports){
var setupFacebook, setupTwitter, siteUrl;

siteUrl = 'http://www.thank-a-teacher.org';

setupFacebook = function() {
  $.getScript('//connect.facebook.net/en_UK/all.js', function() {
    return FB.init({
      appId: '1444954685735176'
    });
  });
  return $('#share-facebook').click(function() {
    return FB.ui({
      method: 'feed',
      link: siteUrl,
      caption: 'Thank a teacher!'
    });
  });
};

setupTwitter = function() {
  var encoded, twitterUrl;
  encoded = encodeURIComponent(siteUrl);
  twitterUrl = "https://twitter.com/share?url=" + encoded + "&via=wmmedu";
  return $('#share-twitter').attr('href', twitterUrl).attr('target', '_blank');
};

exports.setup = function() {
  setupFacebook();
  return setupTwitter();
};


},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
