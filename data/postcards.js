// Generated by CoffeeScript 1.7.1
(function() {
  var Q, mongoose, postcardSchema, utils;

  mongoose = require('mongoose');

  utils = require('./utils');

  Q = require('q');

  exports.postcardSchema = postcardSchema = new mongoose.Schema({
    created: Date,
    message: String,
    youtubeId: String,
    starred: {
      type: Boolean,
      "default": false
    },
    recipient: {
      name: utils.makeName(),
      email: String
    },
    school: {
      "public": utils.makeRef('PublicSchool'),
      "private": utils.makeRef('PrivateSchool')
    },
    author: utils.makeRef('User'),
    views: {
      type: Number,
      "default": 0,
      index: true
    }
  });

  postcardSchema.virtual('recipient.name.display').get(function() {
    return utils.getDisplayName(this.recipient.name);
  });

  postcardSchema.methods.registerView = function() {
    return this.views += 1;
  };

  postcardSchema.statics.getStarred = function(limit) {
    var query;
    if (limit == null) {
      limit = 4;
    }
    query = this.find({
      starred: true
    }).limit(limit).sort('-views');
    return Q.ninvoke(query, 'exec');
  };

  exports.Postcard = mongoose.model('Postcard', postcardSchema);

}).call(this);
