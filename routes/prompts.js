// Generated by CoffeeScript 1.6.3
(function() {
  var Prompt, checkPrompt, checkPromptId, deletePrompt, fail, getIndex, putPrompt, succeed, utils, _ref;

  Prompt = require('../data/prompts').Prompt;

  _ref = utils = require('../lib/utils'), succeed = _ref.succeed, fail = _ref.fail;

  getIndex = function(req, res) {
    return Prompt.find({}, function(err, prompts) {
      if (err) {
        return fail(res, err);
      }
      return res.render('prompts/index', {
        prompts: prompts
      });
    });
  };

  checkPrompt = utils.checkBody('prompt', function(prompt) {
    utils.check(prompt).len(1, 1e5);
    return prompt;
  });

  checkPromptId = function(req) {
    var id;
    id = req.params.promptId;
    utils.check(id).len(24);
    return id;
  };

  putPrompt = function(req, res) {
    var check, values, _ref1;
    _ref1 = utils.checkAll(req, res, {
      prompt: checkPrompt
    }), check = _ref1[0], values = _ref1[1];
    if (check) {
      return;
    }
    return Prompt.create({
      html: values.prompt
    }, function(err, prompt) {
      if (err) {
        return fail(res, err);
      }
      return succeed(res, prompt);
    });
  };

  deletePrompt = function(req, res) {
    var check, values, _ref1;
    _ref1 = utils.checkAll(req, res, {
      promptId: checkPromptId
    }), check = _ref1[0], values = _ref1[1];
    if (check) {
      return;
    }
    return Prompt.findByIdAndRemove(values.promptId, function(err) {
      if (err) {
        return fail(res, err);
      }
      return succeed(res, {});
    });
  };

  exports.create = function(app) {
    app.get('/prompts', getIndex);
    app.get('/prompts/', getIndex);
    app.put('/prompts/', putPrompt);
    return app.del('/prompts/:promptId', deletePrompt);
  };

}).call(this);
